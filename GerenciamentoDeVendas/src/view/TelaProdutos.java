
package view;

import controller.ProdutosControle;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Produto;


/**
 *
 * @author Ribeiro
 */
public class TelaProdutos extends javax.swing.JFrame {

    /**
     * Creates new form TelaLogin
     */
    public TelaProdutos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MarcadoresCadastro = new javax.swing.ButtonGroup();
        botaoVoltar = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        botaoAtualizar = new javax.swing.JButton();
        botaoAdicionar = new javax.swing.JToggleButton();
        campoProdutoNome = new javax.swing.JTextField();
        campoProdutoID = new javax.swing.JTextField();
        campoProdutoPreco = new javax.swing.JTextField();
        campoProdutoQuantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaProdutos = new javax.swing.JTable();
        imagemProduto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1533, 887));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botaoVoltar.setContentAreaFilled(false);
        botaoVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoVoltarMouseClicked(evt);
            }
        });
        getContentPane().add(botaoVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 620, 100, 30));

        botaoRemover.setContentAreaFilled(false);
        botaoRemover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoRemover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoRemoverMouseClicked(evt);
            }
        });
        getContentPane().add(botaoRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 330, 230, 30));

        botaoAtualizar.setContentAreaFilled(false);
        botaoAtualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoAtualizarMouseClicked(evt);
            }
        });
        getContentPane().add(botaoAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 260, 240, 40));

        botaoAdicionar.setContentAreaFilled(false);
        botaoAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoAdicionarMouseClicked(evt);
            }
        });
        getContentPane().add(botaoAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 200, 250, 30));

        campoProdutoNome.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        getContentPane().add(campoProdutoNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 490, 40));

        campoProdutoID.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        campoProdutoID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoProdutoIDKeyTyped(evt);
            }
        });
        getContentPane().add(campoProdutoID, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 490, 40));

        campoProdutoPreco.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        campoProdutoPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoProdutoPrecoKeyTyped(evt);
            }
        });
        getContentPane().add(campoProdutoPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 490, 40));

        campoProdutoQuantidade.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        campoProdutoQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoProdutoQuantidadeKeyTyped(evt);
            }
        });
        getContentPane().add(campoProdutoQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, 490, 40));

        TabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "ID", "Preço (R$) - Unidade", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Long.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelaProdutos.getTableHeader().setReorderingAllowed(false);
        TabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaProdutos);
        if (TabelaProdutos.getColumnModel().getColumnCount() > 0) {
            TabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
            TabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            TabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
            TabelaProdutos.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 700, 300));

        imagemProduto.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        imagemProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/TelaProdutos.jpg"))); // NOI18N
        imagemProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        imagemProduto.setMaximumSize(new java.awt.Dimension(1280, 720));
        imagemProduto.setMinimumSize(new java.awt.Dimension(1280, 720));
        imagemProduto.setPreferredSize(new java.awt.Dimension(1600, 900));
        getContentPane().add(imagemProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 1920, 870));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoProdutoIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoProdutoIDKeyTyped
        char caracterProdutoID = evt.getKeyChar();
        
        if(!Character.isDigit(caracterProdutoID))
            evt.consume();
    }//GEN-LAST:event_campoProdutoIDKeyTyped

    private void campoProdutoQuantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoProdutoQuantidadeKeyTyped
        char caracterProdutoQuantidade = evt.getKeyChar();
        
        if(!Character.isDigit(caracterProdutoQuantidade))
            evt.consume();
    }//GEN-LAST:event_campoProdutoQuantidadeKeyTyped

    private void campoProdutoPrecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoProdutoPrecoKeyTyped
        // TODO add your handling code here:
        char caracterProdutoPreco = evt.getKeyChar();
        
        if(Character.isLetter(caracterProdutoPreco)&&!evt.isAltDown())
            evt.consume();
    }//GEN-LAST:event_campoProdutoPrecoKeyTyped

    private void botaoAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoAdicionarMouseClicked
        if (campoProdutoID.getText() != "" || campoProdutoNome.getText() != "" || campoProdutoPreco.getText() != "" || campoProdutoQuantidade.getText() != "") {
            ProdutosControle controle = new ProdutosControle();
            controle.adicionarProduto(this);
            //Comandos para limpar os campos apos realizar a ação 
            limparCampos();
        } else {
            JOptionPane.showMessageDialog(null, "Preencha os campos!");
        }
    }//GEN-LAST:event_botaoAdicionarMouseClicked

    private void botaoVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoVoltarMouseClicked
        //Comandos para retornar para a tela principal (Possibilidade de implementar um if/else que analisa
        // a boolean isAdmin presente na classe AutenticacaoControle para decidir se vai retornar para o menu
        // de um admin ou de um usuario comum do sistema)
        this.toBack();
        setVisible(false);
        TelaAdmin telaDeAdmin = new TelaAdmin();
        telaDeAdmin.setVisible(true);
        telaDeAdmin.toFront();
    }//GEN-LAST:event_botaoVoltarMouseClicked

    private void TabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaProdutosMouseClicked
        //Serve para ao selicionar uma fileira presente na tabela inserir as informações nos JTextFields
        int fileiraSelecionada = TabelaProdutos.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)TabelaProdutos.getModel();
        campoProdutoNome.setText(model.getValueAt(fileiraSelecionada, 0).toString());
        campoProdutoID.setText(model.getValueAt(fileiraSelecionada, 1).toString());
        campoProdutoPreco.setText(model.getValueAt(fileiraSelecionada, 2).toString());
        campoProdutoQuantidade.setText(model.getValueAt(fileiraSelecionada, 3).toString());
    }//GEN-LAST:event_TabelaProdutosMouseClicked

    private void botaoAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoAtualizarMouseClicked
        int fileiraSelecionada  = TabelaProdutos.getSelectedRow();
        DefaultTableModel tabela = (DefaultTableModel)TabelaProdutos.getModel();
        if (fileiraSelecionada >=0) {
            ProdutosControle controle = new ProdutosControle();
            controle.atualizarProduto(this);
        } else {
            JOptionPane.showMessageDialog(null, "Algo de Errado aconteceu");
        }
        //Comandos para limpar os campos apos realizar a ação 
        limparCampos();
    }//GEN-LAST:event_botaoAtualizarMouseClicked

    private void botaoRemoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoRemoverMouseClicked
        //Remove a fileira de produto da tabela e também o deleta ela do banco de dados)
        int fileiraSelecionada = TabelaProdutos.getSelectedRow();
        if (fileiraSelecionada >= 0) {
            try {
                DefaultTableModel tabela = (DefaultTableModel) TabelaProdutos.getModel();
                int id = Integer.parseInt(tabela.getValueAt(fileiraSelecionada, 0).toString());
                String nome = tabela.getValueAt(fileiraSelecionada, 1).toString();
                double preco = Double.parseDouble(tabela.getValueAt(fileiraSelecionada, 2).toString());
                int quantidade = Integer.parseInt(tabela.getValueAt(fileiraSelecionada, 3).toString());
                ProdutosControle controle = new ProdutosControle();
                boolean deletado = controle.removerProduto(id, nome, preco, quantidade);
                
                if (deletado) {
                    tabela.removeRow(fileiraSelecionada);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao deletar produto."); 
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
                JOptionPane.showMessageDialog(this, "Selecione uma fileira para deletar.");
            }
        //Comandos para limpar os campos apos realizar a ação 
        limparCampos();
    }//GEN-LAST:event_botaoRemoverMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
        mostrarProduto();
        } catch (SQLException ex) {
            Logger.getLogger(TelaProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened
    
    public void limparCampos() {
        campoProdutoNome.setText(" ");
        campoProdutoID.setText(" ");
        campoProdutoPreco.setText(" ");
        campoProdutoQuantidade.setText(" ");
    }
    
    public void mostrarProduto() throws SQLException {
        
        ProdutosControle controle = new ProdutosControle();
        ArrayList<Produto> lista = controle.listaProdutos();
        DefaultTableModel tabelaProdutos = (DefaultTableModel)TabelaProdutos.getModel();
        Object [] fileira = new Object [4];
        for (int i = 0; i<lista.size();i++) {
            fileira[0] = lista.get(i).getNome();
            fileira[1] = lista.get(i).getId();
            fileira[2] = lista.get(i).getPreco();
            fileira[3] = lista.get(i).getQuantidade();
            tabelaProdutos.addRow(fileira);
        }
    }    
    
    public JTable getTabelaProdutos() {
        return TabelaProdutos;
    }

    public void setTabelaProdutos(JTable TabelaProdutos) {
        this.TabelaProdutos = TabelaProdutos;
    }

    public JTextField getCampoProdutoID() {
        return campoProdutoID;
    }

    public void setCampoProdutoID(JTextField campoProdutoID) {
        this.campoProdutoID = campoProdutoID;
    }

    public JTextField getCampoProdutoNome() {
        return campoProdutoNome;
    }

    public void setCampoProdutoNome(JTextField campoProdutoNome) {
        this.campoProdutoNome = campoProdutoNome;
    }

    public JTextField getCampoProdutoPreco() {
        return campoProdutoPreco;
    }

    public void setCampoProdutoPreco(JTextField campoProdutoPreco) {
        this.campoProdutoPreco = campoProdutoPreco;
    }

    public JTextField getCampoProdutoQuantidade() {
        return campoProdutoQuantidade;
    }

    public void setCampoProdutoQuantidade(JTextField campoProdutoQuantidade) {
        this.campoProdutoQuantidade = campoProdutoQuantidade;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup MarcadoresCadastro;
    private javax.swing.JTable TabelaProdutos;
    private javax.swing.JToggleButton botaoAdicionar;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JTextField campoProdutoID;
    private javax.swing.JTextField campoProdutoNome;
    private javax.swing.JTextField campoProdutoPreco;
    private javax.swing.JTextField campoProdutoQuantidade;
    private javax.swing.JLabel imagemProduto;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
